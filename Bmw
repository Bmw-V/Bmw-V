local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Bmw v3(Beta)",
   Icon = 4483362458, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "üëëBmw v3 PremiumOnlyüëë",
   LoadingSubtitle = "üëëby Palawanüëë",
   Theme = "Nord", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "üëëPalawanüëë"
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "üóùKey system üóù",
      Subtitle = "üîê",
      Note = "üëëPremium Version Beta currentlyüëë", -- Use this to tell the user how to get a key
      FileName = "Key system", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = nil, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"asfiouhd879dsfjkshbdv0","abdullahsupportsallahandabdullahisgood} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local player = game.Players.LocalPlayer
local Player = game.Players.LocalPlayer

Tab = Window:CreateTab("Movement", 4483362458) -- Title, Image
Rayfield:Notify({
   Title = "",
   Content = "Welcome, üëë"..Player.Name.."üëë",
   Duration = 6.5,
   Image = 4483362458,
})

local Section = Tab:CreateSection("Welcome üåë" ..Player.Name.."üåë")

local Slider = Tab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 100},
   Increment = 10,
   Suffix = "speed",
   CurrentValue = 16,
   Flag = "Slider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
   end,
})

local Button = Tab:CreateButton({
   Name = "Reset Walkspeed",
   Interact = 'Click',
   Callback = function()
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
   end,
})

local Slider = Tab:CreateSlider({
   Name = "Jump height",
   Range = {0, 250},
   Increment = 10,
   Suffix = "jump",
   CurrentValue = 50,
   Flag = "Slider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
   end,
})

local Button = Tab:CreateButton({
   Name = "Reset jumppower",
   Interact = 'Click',
   Callback = function()
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
   end,
})

local Section = Tab:CreateSection("Fly gui ",false) -- The 2nd argument is to tell if its only a Title and doesnt contain element

local Button = Tab:CreateButton({
   Name = "Fly",
   Callback = function()
   loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
   end,
})

local Section = Tab:CreateSection("Infinite Jump")

-- Variable to track toggle state
local infiniteJumpEnabled = false

-- Create Toggle using Rayfield inside the Section (Rayfield toggles don‚Äôt belong to sections directly, so just create under tab)
local InfiniteJumpToggle = Tab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "InfiniteJumpToggle",
    Callback = function(value)
        infiniteJumpEnabled = value
    end
})

-- Connect jump request to infinite jump toggle
game:GetService("UserInputService").JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

local Button = Tab:CreateButton({
   Name = "Inf jump ui",
   Interact = 'Click',
   Callback = function()
    -- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "InfiniteJumpToggleGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the frame (button)
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 140, 0, 50)  -- wider width
frame.Position = UDim2.new(0.5, -70, 0.5, -25) -- center
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 1
frame.Parent = screenGui

-- Make frame draggable
frame.Active = true
frame.Draggable = true

-- Circle indicator label
local circleLabel = Instance.new("TextLabel")
circleLabel.Size = UDim2.new(0, 30, 1, 0)
circleLabel.Position = UDim2.new(0, 5, 0, 0)
circleLabel.BackgroundTransparency = 1
circleLabel.TextColor3 = Color3.new(1, 1, 1)
circleLabel.TextScaled = true
circleLabel.Font = Enum.Font.SourceSansBold
circleLabel.Text = "‚óã"
circleLabel.Parent = frame

-- Text label for toggle
local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, -40, 1, 0)
label.Position = UDim2.new(0, 40, 0, 0)
label.BackgroundTransparency = 1
label.TextColor3 = Color3.new(1, 1, 1)
label.TextScaled = true
label.Font = Enum.Font.SourceSansBold
label.Text = "Infinite Jump"
label.TextXAlignment = Enum.TextXAlignment.Left
label.Parent = frame

-- Infinite Jump logic
local infiniteJumpEnabled = false

local function updateToggleUI()
    if infiniteJumpEnabled then
        circleLabel.Text = "‚óè"
        label.TextColor3 = Color3.fromRGB(100, 255, 100) -- green text when on
    else
        circleLabel.Text = "‚óã"
        label.TextColor3 = Color3.new(1, 1, 1) -- white text when off
    end
end

function toggleInfiniteJump()
    infiniteJumpEnabled = not infiniteJumpEnabled
    updateToggleUI()
end

-- Connect JumpRequest for infinite jump
game:GetService("UserInputService").JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Toggle on click or tap
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        toggleInfiniteJump()
    end
end)

-- Initialize UI
updateToggleUI()
   end,
})

local Tab = Window:CreateTab("Teleport", 0)

local Players = game:GetService("Players")
local lp = Players.LocalPlayer

-- Main Functions
local playerInput = Tab:CreateInput({
    Name = "Search Player",
    PlaceholderText = "Type name or click below...",
    Callback = function(Text)
        _G.Target = findPlayer(Text)
    end,
})

-- Player List Section
Tab:CreateSection("Online Players")

local function updatePlayerList()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= lp then
            Tab:CreateButton({
                Name = player.Name .. " (@@" .. player.DisplayName .. ")",
                Callback = function()
                    _G.Target = player
                    playerInput:Set(player.Name)
                    Rayfield:Notify({
                        Title = "Selected",
                        Content = "Ready to teleport to: " .. player.Name,
                        Duration = 2
                    })
                end,
            })
        end
    end
end

-- Teleport Action
Tab:CreateButton({
    Name = "TELEPORT TO PLAYER",
    Callback = function()
        if not _G.Target then
            Rayfield:Notify({
                Title = "Error",
                Content = "No player selected!",
                Duration = 3
            })
            return
        end

        if lp.Character and _G.Target.Character then
            lp.Character.HumanoidRootPart.CFrame = 
                _G.Target.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
            Rayfield:Notify({
                Title = "Success",
                Content = "Teleported to " .. _G.Target.Name,
                Duration = 3
            })
        end
    end,
})

local Section = Tab:CreateSection("This is still in beta")

updatePlayerList()
Players.PlayerAdded:Connect(updatePlayerList)
game:GetService("Players").PlayerAdded:Connect(updatePlayerList)

local Tab = Window:CreateTab("Other scripts", 4483362458) -- Title, Image

local Section = Tab:CreateSection("üëëadmin commandsüëë")

local Button = Tab:CreateButton({
   Name = "‚ôæÔ∏èInfinite yield‚ôæÔ∏è",
   Callback = function()
   loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
   end,
})

local Button = Tab:CreateButton({
   Name = "üëëadmin commandsüëë",
   Callback = function()
   -- The function that takes place when the button is pressed
   -- QuirkyCMD by smokedoutlocedout, check source for full credits
loadstring(game:HttpGet("https://gist.github.com/someunknowndude/38cecea5be9d75cb743eac8b1eaf6758/raw"))()
   end,
})

local Section = Tab:CreateSection("chat bypasser change your language to “ö–∞–∑–∞“õ –¢—ñ–ª—ñ")

local Button = Tab:CreateButton({
   Name = "chat bypass",
   Callback = function()
   --[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
-- set ur language to  “ö–∞–∑–∞“õ –¢—ñ–ª—ñ

loadstring(game:HttpGet("https://raw.githubusercontent.com/AnnaRoblox/AnnaBypasser/refs/heads/main/AnnaBypasser.lua",true))()
   end,
})

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Grow A Garden V3",
    LoadingTitle = "Loading Grow A Garden",
    LoadingSubtitle = "Powered by Rayfield",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "GrowGardenConfig",
        FileName = "GardenSettings"
    },
    KeySystem = false
})

local Tab = Window:CreateTab("Grow A Garden", 4483362458)

-- Custom trim function
local function trimString(str)
    return (str or ""):gsub("^%s*(.-)%s*$", "%1")
end

-- SEED VARIABLES
local seedName = ""

-- Seed Input
local SeedInput = Tab:CreateInput({
    Name = "Enter Seed Name",
    PlaceholderText = "e.g. Mango, Apple, Orange",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        seedName = type(Text) == "string" and trimString(Text:gsub("%s+", " ")) or ""
    end,
})

-- Spawn Seed Button
Tab:CreateButton({
    Name = "Spawn Seed",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")

        if seedName == "" then
            Rayfield:Notify({
                Title = "Error",
                Content = "No seed name provided.",
                Duration = 6,
                Image = 4483362458
            })
            return
        end

        local seedModel = ReplicatedStorage.Seed_Models:FindFirstChild(seedName)
        if not seedModel then
            Rayfield:Notify({
                Title = "Error",
                Content = "Seed '"..seedName.."' not found.",
                Duration = 6,
                Image = 4483362458
            })
            return
        end

        -- Stack count
        local count = 1
        for _, item in ipairs(backpack:GetChildren()) do
            if item.Name:match("^"..seedName.." x(%d+)$") then
                local current = tonumber(item.Name:match("x(%d+)")) or 1
                if current >= count then
                    count = current + 1
                end
            elseif item.Name == seedName then
                count = 2
            end
        end

        local newSeed = seedModel:Clone()
        local tool = Instance.new("Tool")
        tool.RequiresHandle = false
        tool.Name = (count == 1) and seedName or (seedName.." x"..count)
        newSeed.Parent = tool
        tool.Parent = backpack

        Rayfield:Notify({
            Title = "Success",
            Content = "Spawned "..tool.Name,
            Duration = 6,
            Image = 4483362458
        })
    end
})

-- Enhanced spawn function
local function spawnSeedToInventory()
    -- Validate input
    if type(seedName) ~= "string" or #seedName == 0 then
        return false, "Please enter a valid seed name"
    end

    -- Format name (capitalize first letter)
    local formattedName = seedName:gsub("^%l", string.upper)

    -- Get services
    local rs = game:GetService("ReplicatedStorage")
    local seedModels = rs:FindFirstChild("Seed_Models")
    if not seedModels then
        return false, "Seed_Models folder not found in ReplicatedStorage"
    end

    -- Find seed (case-insensitive search)
    local seedModel
    for _, child in ipairs(seedModels:GetChildren()) do
        if child.Name:lower() == formattedName:lower() then
            seedModel = child
            formattedName = child.Name -- Use exact casing from model
            break
        end
    end
    
    if not seedModel then
        return false, "Seed '"..formattedName.."' not found"
    end

    -- Get player inventory
    local player = game:GetService("Players").LocalPlayer
    local backpack = player:FindFirstChild("Backpack") or player:WaitForChild("Backpack", 2)
    if not backpack then
        return false, "Could not access Backpack"
    end

    -- Check for existing seed
    local existingSeed
    for _, item in ipairs(backpack:GetChildren()) do
        if item.Name:match("^"..formattedName.." Seed") then
            existingSeed = item
            break
        end
    end

    -- Handle inventory addition
    if existingSeed then
        -- Update stack count
        local currentCount = tonumber(existingSeed.Name:match("x(%d+)$")) or 1
        local newCount = currentCount + 1
        
        existingSeed.Name = formattedName.." Seed"..(newCount > 1 and (" x"..newCount) or "")
        
        local countValue = existingSeed:FindFirstChild("Count") or Instance.new("IntValue")
        countValue.Name = "Count"
        countValue.Value = newCount
        countValue.Parent = existingSeed
        
        return true, "Added to stack (now x"..newCount..")"
    else
        -- Create new seed
        local newSeed = seedModel:Clone()
        
        -- Ensure it's a Tool for inventory
        if not newSeed:IsA("Tool") then
            local tool = Instance.new("Tool")
            tool.Name = formattedName.." Seed"
            tool.Parent = backpack
            newSeed.Parent = tool
            newSeed.Name = "Handle"
        else
            newSeed.Name = formattedName.." Seed"
            newSeed.Parent = backpack
        end
        
        return true, "Seed added to inventory"
    end
end

-- Spawn Button
MainTab:CreateButton({
    Name = "Spawn Seed",
    Callback = function()
        local success, result = pcall(spawnSeedToInventory)
        
        Rayfield:Notify({
            Title = success and "Success" or "Error",
            Content = type(result) == "string" and result or "Unknown error occurred",
            Duration = 6.5,
            Image = 4483362458,
            Actions = {
                Ignore = {
                    Name = "Okay",
                    Callback = function() end
                },
            },
        })
    end,
})

local Tab = Window:CreateTab("Game scripts", 4483362458) -- Title, Image

local Section = Tab:CreateSection("üëæBedwarsüëæ")

local Button = Tab:CreateButton({
   Name = "üö¨Vape v4 modedüö¨",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/VapeVoidware/vapevoidware/main/NewMainScript.lua", true))()
   end,
})

local Section = Tab:CreateSection("üî™Murder Mystery 2üó°")

local Button = Tab:CreateButton({
   Name = "Mm2",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/mzkv/mm2/refs/heads/main/xHUB", true))()
   end,
})

local Section = Tab:CreateSection("Arsenal (gun mods)üî´")

local Button = Tab:CreateButton({
   Name = "Arsenal",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/Insertl/QuotasHub/main/BETAv1.3"))()
   end,
})

local Section = Tab:CreateSection("jailbreak autorob pc/mobile")

local Button = Tab:CreateButton({
   Name = "Jailbreak",
   Callback = function()
 loadstring(game:HttpGet('http://scripts.projectauto.xyz/AutoRobV5'))()
   end,
})

local Tab = Window:CreateTab("üåëExecutorsüåë", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Synapse X")

local Button = Tab:CreateButton({
   Name = "Synapse X",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/Chillz-s-scripts/main/Synapse-X-Remake.lua"))()
   end,
})

local Section = Tab:CreateSection("Krnl")

local Button = Tab:CreateButton({
   Name = "Krnl",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/SabrXH/KRNL-Ui-Remake/refs/heads/main/Script"))()
   end,
})

local Section = Tab:CreateSection("Solara v3 Beta")

local Button = Tab:CreateButton({
   Name = "SolaraV3",
   Callback = function()
   -- Solara v3 (Beta) UI
local plr = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui", plr:WaitForChild("PlayerGui"))
gui.ResetOnSpawn = false

local attached = false

-- Main Frame
local main = Instance.new("Frame")
main.Size = UDim2.new(0, 600, 0, 250)
main.Position = UDim2.new(0.5, -300, 0.5, -125)
main.BackgroundColor3 = Color3.fromRGB(30,30,30)
main.Parent = gui
main.Active = true
main.Draggable = true

-- Attach Status Button (Red/Green)
local statusBtn = Instance.new("TextButton", main)
statusBtn.Size = UDim2.new(0, 15, 0, 15)
statusBtn.Position = UDim2.new(0, 5, 0, 5)
statusBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
statusBtn.BorderSizePixel = 0
statusBtn.Text = ""
Instance.new("UICorner", statusBtn).CornerRadius = UDim.new(1,0)

-- Solara Name Label
local nameLbl = Instance.new("TextLabel", main)
nameLbl.Position = UDim2.new(0, 25, 0, 2)
nameLbl.Size = UDim2.new(0, 200, 0, 20)
nameLbl.BackgroundTransparency = 1
nameLbl.Text = "SolaraV3 (Beta)"
nameLbl.Font = Enum.Font.SourceSansBold
nameLbl.TextSize = 18
nameLbl.TextColor3 = Color3.fromRGB(255,255,255)
nameLbl.TextXAlignment = Enum.TextXAlignment.Left

-- Script Input
local scriptBox = Instance.new("TextBox", main)
scriptBox.Size = UDim2.new(1, -10, 1, -60)
scriptBox.Position = UDim2.new(0, 5, 0, 30)
scriptBox.ClearTextOnFocus = false
scriptBox.MultiLine = true
scriptBox.TextXAlignment = Enum.TextXAlignment.Left
scriptBox.TextYAlignment = Enum.TextYAlignment.Top
scriptBox.Text = ""
scriptBox.Font = Enum.Font.Code
scriptBox.TextSize = 14
scriptBox.TextColor3 = Color3.fromRGB(255,255,255)
scriptBox.BackgroundColor3 = Color3.fromRGB(35,35,35)

-- Execute Button
local exec = Instance.new("TextButton", main)
exec.Size = UDim2.new(0, 70, 0, 25)
exec.Position = UDim2.new(0, 5, 1, -30)
exec.Text = "Execute"
exec.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
exec.TextColor3 = Color3.fromRGB(255,255,255)

-- Clear Button
local clear = Instance.new("TextButton", main)
clear.Size = UDim2.new(0, 70, 0, 25)
clear.Position = UDim2.new(0, 80, 1, -30)
clear.Text = "Clear"
clear.BackgroundColor3 = Color3.fromRGB(100, 100, 0)
clear.TextColor3 = Color3.fromRGB(255,255,255)

-- Attach Button (Bottom Right)
local attachBtn = Instance.new("TextButton", main)
attachBtn.Size = UDim2.new(0, 70, 0, 25)
attachBtn.Position = UDim2.new(1, -75, 1, -30)
attachBtn.Text = "Attach"
attachBtn.TextColor3 = Color3.fromRGB(255,255,255)
attachBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)

-- Small GUI ("S" Button)
local small = Instance.new("TextButton", gui)
small.Size = UDim2.new(0, 50, 0, 50)
small.Position = UDim2.new(0, 10, 0.5, -25)
small.BackgroundColor3 = Color3.fromRGB(50,50,50)
small.Text = "S"
small.TextColor3 = Color3.fromRGB(255,255,255)
small.Visible = false
small.Draggable = true
small.BorderSizePixel = 0
Instance.new("UICorner", small).CornerRadius = UDim.new(1,0)

-- Close Button (Top Right)
local close = Instance.new("TextButton", main)
close.Size = UDim2.new(0, 25, 0, 25)
close.Position = UDim2.new(1, -25, 0, 0)
close.Text = "X"
close.TextColor3 = Color3.fromRGB(255,255,255)
close.BackgroundColor3 = Color3.fromRGB(100,0,0)

-- Button Logic
attachBtn.MouseButton1Click:Connect(function()
	if not attached then
		attached = true
		statusBtn.BackgroundColor3 = Color3.fromRGB(0,255,0)
		attachBtn.Text = "Attached"
		attachBtn.BackgroundColor3 = Color3.fromRGB(0,255,0)
	else
		local old = nameLbl.Text
		nameLbl.Text = "Already attached"
		task.wait(6)
		nameLbl.Text = old
	end
end)

exec.MouseButton1Click:Connect(function()
	loadstring(scriptBox.Text)()
end)

clear.MouseButton1Click:Connect(function()
	scriptBox.Text = ""
end)

close.MouseButton1Click:Connect(function()
	main.Visible = false
	small.Visible = true
end)

small.MouseButton1Click:Connect(function()
	main.Visible = true
	small.Visible = false
end)
   end,
})

local Tab = Window:CreateTab("Settings", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Credits")

local Button = Tab:CreateButton({
   Name = "Credits",
   Callback = function()
   Rayfield:Notify({
   Title = "",
   Content = "üëë36kgrave and ichichitvüëë",
   Image = 4483362458,

   OnClick = function()

   end,
})
   end,
})

local Button = Tab:CreateButton({
   Name = "Tester",
   Callback = function()
   Rayfield:Notify({
   Title = "",
   Content = "üëëichichitvüëë",
   Duration = 6.5,
   Image = 4483362458,
})
   end,
})

local Section = Tab:CreateSection("üë®‚Äçüíªscripterüë®‚Äçüíª")

local Button = Tab:CreateButton({
   Name = "üë®‚ÄçüíªScripterüë®‚Äçüíª",
   Interact = 'Click',
   Callback = function()
   Rayfield:Notify({
   Title = "Scripter/Code",
   Content = "üëæichichitvüëæ",
   Duration = 6.5,
   Image = 4483362458,
})
   end,
})

local Button = Tab:CreateButton({
   Name = "appreciation",
   Interact = 'Click',
   Callback = function()
   Rayfield:Notify({
   Title = "",
   Content = "Thanks to üëë"..Player.Name.."üëë for using the script",
   Duration = 6.5,
   Image = 4483362458,
})
   end,
})

local Players = game:GetService("Players")
local lp = Players.LocalPlayer
